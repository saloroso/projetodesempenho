
    
    // Função para criar primeiro administrador.
    function Criaradm(nome, email, senha){
        this.nome = nome;
        this.email = email;
        this.senha = senha;
        this.codigos = new Array();
        this.membros = new Array();
        this.notadaequipe=0;        
    }
    
    // Função para criar Array global que armazenará todos os administradores. 
    listadeadms = new Array();

    // Armazena o usuário que está logado no momento.
    usuariologado = 0;

    // Função para criar Administrador básico.
    var master = new Criaradm ("Darlan","master@gmail.com", "master")
    
    // Inserção do Master na lista primária de administradores.    
    listadeadms.push(master);
                    
    // Função para criar outros administradores.   
    function cadastrarAdm(){
     
        // programar diferente, pois tem que pegar os valores de id distintos.
    }


    function logarAdm(){   
        var emailadm = document.getElementById("defaultLoginFormEmail").value;
        var senhaadm = document.getElementById("defaultLoginFormPassword").value;        
        var tamanho = listadeadms.length;
        
        for (i=0;i<tamanho;i++){            
            if ((listadeadms[i].email==emailadm) && (listadeadms[i].senha==senhaadm)) {
                usuariologado = listadeadms[i].email;
                alert ("Trocar depois de Formulário para PortalAdm.");
                window.location.href="https://saloroso.github.io/projetodesempenho/formulario";
            } else {
                alert("E-mail ou senha incorretos, tente novamente.");}    
        }} 

    function enviarFormulario(){
        
        alert ("Função de preencher linkada");
        
        var codigodorespondente = document.getElementById("codigodorespondente").value;
        var nomedorespondente = document.getElementById("nomedorespondente").value;
        var liderdorespondente = document.getElementById("liderdorespondente").value;
        
        alert (codigodorespondente + nomedorespondente + liderdorespondente);
        
        var tamanholisadms = listadeadms.length;
        
        alert (tamanholisadms);
        
        // se o nome do líder não for igual então já acusa erro.
        for (i=0;i<tamanholisadms;i++){  
            if (listadeadms[i].nome==liderdorespondente){
                // código se o nome do adm for compatível, passando a pegar a lista de membros.
                var tamanholistarespondentes = listadeadms[i].membros.length;
                
                for (j=0;j<tamanholistarespondentes;j++){
                    if (listadeadms[i].membros==nomedorespondente){
                        
                        // se a lista de membros for compatível passa para a conferência do código.
                        var tamanholistacodigo = listadeadms[i].codigos.length;
                        
                        if (listadeadms[i].codigos==cocodigodorespondente){
                            PreencherFormulario(listadeadms[i]);
                            
                        } else {
                            alert ("O código não se encontra cadastrado");
                        }
                        
                    } else {
                        alert ("O nome do respondente não se encontra cadastrado");
                }
                
            } else {
                alert ("O líder digitado não se encontra cadastrado");
            }
         }

      function PreencherFormulario(membro){
          // preencher tipo com membro.this é igual a... 
      }
    
            
      // Para o adm cadastrar novo usuário não pode ter código ou nome repetido.
            
