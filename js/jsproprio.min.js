      
    listadeadms = new Array(); // Função para criar Array global que armazenará todos os administradores. 
    usuariologado = 0; // Armazena o usuário que está logado no momento.

    function Criaradm(nome,email,senha){ // Função para criar primeiro administrador, sem captura de informações.
        this.nome = nome;
        this.email = email;
        this.senha = senha;
        this.membros = new Array();
        this.notadaequipe = function(){ // calcular nota da equipe e voltar com return, talvez inserir outras notas por competência.
        }
    }
 
    var master = new Criaradm ("Master","master@gmail.com","master"); // Criação do administrador básico.
    listadeadms.push(master);  // Inserção do usuário Master na lista primária de administradores.    

      function InserirAdm(nome1,email1,senha1){
            
          var tamanho6 = listadeadms.length;
          alert ("Tamanho da lista de adms = " + tamanho6); 
          alert ("Entrei na função inserir.");
                    
          for (r=0;r<tamanho6;r++){

                if ((nome1=="") || (email1=="") || (senha1=="")){      
                    alert ("Um dos campos está vazio, favor preenchê-lo.");
                    r=tamanho6;
                } else if ((listadeadms[r].nome==nome1) || (listadeadms[r].email==email1)){
                           alert ("Dados de acesso já cadastrados.");
                           r=tamanho6;
                           } else {
                              return true;
                           }                                   
          }
            
      }

    function Cadastraradm2(){ // Função para criar segundo tipo de administrador, com captura de valores.
             
          var nome1 = document.getElementById("Nome").value;
          var email1 = document.getElementById("E-mail").value;
          var senha1 = document.getElementById("Senha").value;      
                              
          alert ("26 - Entrando, lendo e armazenando ok. Listadeadms aumenta com push. For correto quando nome e email são iguais.");
          
          var verificar = InserirAdm(nome1,email1,senha1);
          
          if (verificar==true){
               var novouser = new Criaradm(nome1,email1,senha1);
               listadeadms.push(novouser);
               alert ("Cadastrado com sucesso.");
          }
    }


      





    // Função para criar primeiros respondentes.
    function Criarrespondente(nome, codigo, lider, desempenho, auto, comu, flex, foco, rel, ini, geral){
          this.nome = nome;
          this.codigo = codigo;
          this.lider = lider;
          this.desempenho = desempenho;
          this.media_auto = auto;
          this.media_comu = comu;
          this.media_flex = flex;
          this.media_foco = foco;
          this.media_rel = rel;
          this.media_ini = ini;
          this.media_geral = geral;
          this.respondido=1;      
    }


    // Inserção de respondentes default no usuario principal do adm, testada e funcionando adequadamente.
    var usuario1 = new Criarrespondente ("usuario1", "codigo1", "Master", 50, 60, 70, 25, 67, 89, 45, 58)
    var usuario2 = new Criarrespondente ("usuario2", "codigo2", "Master", 40, 30, 80, 24, 63, 89, 14, 48)
    var usuario3 = new Criarrespondente ("usuario3", "codigo3", "Master", 56, 78, 80, 22, 33, 76, 17, 51)
    listadeadms[0].membros.push(usuario1);
    listadeadms[0].membros.push(usuario2);
    listadeadms[0].membros.push(usuario3);


    // função para logar como administrador a partir da array global de administradores.
    function logarAdm(){   
        var emailadm = document.getElementById("defaultLoginFormEmail").value;
        var senhaadm = document.getElementById("defaultLoginFormPassword").value;        
        var tamanho = listadeadms.length;
          alert (tamanho);
        for (i=0;i<tamanho;i++){            
            if ((listadeadms[i].email==emailadm) && (listadeadms[i].senha==senhaadm)) {
                usuariologado = listadeadms[i].email;
                alert ("Trocar depois de Formulário para PortalAdm.");
                window.location.href="https://saloroso.github.io/projetodesempenho/formulario";
            } else {
                alert("Campos vazios ou incorretos, tente novamente.");}}} 


    // função clicada para enviar o formulário e preencher os objetos membros já instanciados.
    function enviarFormulario(){
              
        var codigodorespondente = document.getElementById("codigodorespondente").value;
        var nomedorespondente = document.getElementById("nomedorespondente").value;    
        var liderdorespondente = document.getElementById("liderdorespondente").value;
        var auto1 = document.getElementById("auto1").value;    
        var auto2 = document.getElementById("auto2").value;
        var auto3 = document.getElementById("auto3").value;   
        var comu1 = document.getElementById("comu1").value;  
        var comu2 = document.getElementById("comu2").value; 
        var comu3 = document.getElementById("comu3").value; 
        var disc1 = document.getElementById("disc1").value; 
        var disc2 = document.getElementById("disc2").value; 
        var disc3 = document.getElementById("disc3").value; 
        var flex1 = document.getElementById("flex1").value;  
        var flex2 = document.getElementById("flex2").value; 
        var flex3 = document.getElementById("flex3").value; 
        var foco1 = document.getElementById("foco1").value; 
        var foco2 = document.getElementById("foco2").value; 
        var foco3 = document.getElementById("foco3").value; 
        var rel1 = document.getElementById("rel1").value;  
        var rel2 = document.getElementById("rel2").value; 
        var rel3 = document.getElementById("rel3").value; 
        var ini1 = document.getElementById("ini1").value; 
        var ini2 = document.getElementById("ini2").value; 
        var ini3 = document.getElementById("ini3").value;    
        
        // até aqui a captura de variáveis está ocorrendo perfeitamente.
        
        if ((auto1<0) || (auto1>100) || (auto2<0) || (auto2>100) || (auto3<0) || (auto3>100)
            || (comu1<0) || (comu1>100) || (comu2<0) || (comu2>100) || (comu3<0) || (comu3>100)
            || (disc1<0) || (disc1>100) || (disc2<0) || (disc2>100) || (disc3<0) || (disc3>100)
            || (flex1<0) || (flex1>100) || (flex2<0) || (flex2>100) || (flex3<0) || (flex3>100)
            || (foco1<0) || (foco1>100) || (foco2<0) || (foco2>100) || (foco3<0) || (foco3>100)
            || (rel1<0) || (rel1>100) || (rel2<0) || (rel2>100) || (rel3<0) || (rel3>100)
            || (ini1<0) || (ini1>100) || (ini2<0) || (ini2>100) || (ini3<0) || (ini3>100)
           ) { alert ("Alguma(s) da(s) nota(s) digitadas é menor que zero ou maior que cem, favor adequá-los");
        } else { 
              
              // correção da string para valores númericos.
              auto1 = parseInt(auto1,10);
              auto2 = parseInt(auto2,10);
              auto3 = parseInt(auto3,10);
              comu1 = parseInt(comu1,10);
              comu2 = parseInt(comu2,10);
              comu3 = parseInt(comu3,10);
              disc1 = parseInt(disc1,10);
              disc2 = parseInt(disc2,10);
              disc3 = parseInt(disc3,10);
              flex1 = parseInt(flex1,10);
              flex2 = parseInt(flex2,10);
              flex3 = parseInt(flex3,10);
              foco1 = parseInt(foco1,10);
              foco2 = parseInt(foco2,10);
              foco3 = parseInt(foco3,10);
              rel1 = parseInt(rel1,10);
              rel2 = parseInt(rel2,10);
              rel3 = parseInt(rel3,10);
              ini1 = parseInt(ini1,10);
              ini2 = parseInt(ini2,10);
              ini3 = parseInt(ini3,10);
                                       
              // caso todos os valores estiverem corretos passa para a etapa de preencher notas.
              var media_auto = (auto1 + auto2 + auto3)/3;
              var media_comu = (comu1 + comu2 + comu3)/3;
              var media_disc = (disc1 + disc2 + disc3)/3;
              var media_flex = (flex1 + flex2 + flex3)/3;
              var media_foco = (foco1 + foco2 + foco3)/3;
              var media_rel = (rel1 + rel2 + rel3)/3;
              var media_ini = (ini1 + ini2 + ini3)/3; 
              var media_geral=0;
              media_geral = (media_auto + media_comu + media_disc + media_flex + media_foco + media_rel + media_ini)/7;    
              
              alert ("Entrada na função correta, ver. 5");
                          
              var tamanho2 = listadeadms.length;
              for (j=0;j<tamanho2;j++){         
                    if (listadeadms[j].nome==liderdorespondente){
                          
                          alert ("Nome do líder encontrado.");
                          var tamanho3 = listadeadms[j].membros.length;
                          alert (tamanho3);                        
                          
                          
                          
                          // lembrar de limpar formulário depois de devidamente processar.
                          
                        } else {
                        alert ("Nome do líder não encontrado, favor corrigir a informação e tentar novamente.");
                        } 
              }
                    

                        
              // programar a conferência do usuário - percorrer para ver se existe adm e, existindo, se existe usuário conforme nome e código.
              // abaixo daqui é o fechamento do if e da função de enviar formulário.           
        }

    }
        

           
      // Para o adm cadastrar novo usuário não pode ter código ou nome repetido.
            
